# CS364 Assignment 2.1

from search import *

# Representation of the maze based on cell configuration

maze0 = [
    ['0110', '0101', '0101', '0101', '0101', '0101', '0101', '0111', '0101', '0101', '0101', '0101', '0101', '0001'],
    ['1010', '0110', '0011', '0110', '0011', '0100', '1100', '0101', '0101', '0101', '0101', '0111', '0101', '0011'],
    ['1010', '1010', '1010', '1010', '1100', '0101', '0101', '0101', '0101', '0101', '0011', '1010', '0110', '1011'],
    ['1010', '1010', '1010', '1010', '1001', '0101', '0101', '0101', '0101', '0011', '1010', '1010', '1010', '1010'],
    ['1010', '1010', '1010', '1010', '1010', '0110', '0101', '0101', '0101', '1001', '1100', '1001', '1010', '1010'],
    ['1010', '1010', '1110', '1011', '1010', '1110', '0101', '0101', '0101', '0011', '0010', '0010', '1010', '1010'],
    ['1110', '1011', '1010', '1010', '1010', '1010', '0110', '0011', '0010', '1010', '1010', '1010', '1010', '1010'],
    ['1010', '1010', '1010', '1000', '1010', '1010', '1110', '1001', '1010', '1010', '1010', '1010', '1010', '1010'],
    ['1010', '1010', '1010', '0110', '1011', '1010', '1010', '0110', '1011', '1010', '1010', '1110', '1011', '1010'],
    ['1010', '1010', '1010', '1010', '1010', '1010', '1010', '1010', '1010', '1010', '1110', '1011', '1010', '1010'],
    ['1010', '1110', '1011', '1010', '1010', '1010', '1010', '1010', '1010', '1010', '1010', '1010', '1010', '1010'],
    ['1010', '1000', '1000', '1010', '1100', '1101', '1011', '1010', '1010', '1010', '1010', '1010', '1000', '1010'],
    ['1010', '0110', '0101', '1101', '0011', '0100', '1011', '1010', '1110', '1011', '1010', '1000', '0110', '1011'],
    ['1100', '1001', '0100', '0101', '1001', '0100', '1101', '1001', '1000', '1000', '1100', '0101', '1001', '1000']
    ]

def rules_str(node):
    state = node.state
    square_str = maze0[state[0],state[1]]
    return square_str
rules = []
rules.append({"pre": lambda(n):rules_str(n)[0],"act":#return the node above it. Or something.
# ....
# ....
# .... The following main program runs all 5 searchs using the new versions in search.py

if __name__ == '__main__':
    print("CS364, Assignment 2, Ima Student, Ura Student")
    print('1a: ', depth(root, goal, silent=True))
    print('1b: ', hill(root, goal, h, silent=True))
    print('1c: ', steep(root, goal, h, silent=True))
    print('1d: ', best(root, goal, h, silent=True))
    print('1e: ', algAM(root, goal, h, silent=True))


